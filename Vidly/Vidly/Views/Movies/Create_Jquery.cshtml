@model Vidly.ViewModels.MovieViewModel

@*<button id="Mytst" class="btn btn-info">
    Add Test Row
    </button>*@

<table id="mytable" class="table table-bordered table-hover display">
    <thead>
        <tr>
            <th>Movie Name</th>
            <th>Release Date</th>
            <th>Date Added</th>
            <th>Genre</th>
            <th>Stock</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>


<button class="btn btn-block btn-primary" data-toggle="modal" data-target="#mymodal">Open Model</button>

<div style="margin-top:5%">
    <input type="text" id="tt" />
    <span id="ii"> </span>
</div>

<div class="container" style="width:40%;margin-top:25%">

    <div class="modal fade" id="mymodal">
        <div class="modal-dialog">
            <div class="modal-content">
                <form>

                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3 id="ModalTitle" class="modal-title"></h3>
                    </div>

                    <div class="modal-body">


                        {

                        <div class="form-horizontal">
                            <h4>MovieViewModel</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.Movie.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Movie.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Movie.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Movie.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Movie.ReleaseDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control", @Type = "date", @Value = DateTime.Now.ToShortDateString() } })
                                    @Html.ValidationMessageFor(model => model.Movie.ReleaseDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.Movie.NumberInStock, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Movie.NumberInStock, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                                    @Html.ValidationMessageFor(model => model.Movie.NumberInStock, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.Movie.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "- Select the Genre-", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Movie.GenreId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.HiddenFor(m => m.Movie.Id)

                           
                            @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>*@

                        </div>
                        }




                        <div id="Loaderr" style="text-align:center; display:none">
                            <img src="~/Photo/loading.png" />
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button class="btn btn-primary">test</button>
                        @*<a href="#" class="btn btn-warning" data-dismiss="modal">Cancel</a>
        <div id="submitBrn" style="margin-left: 93px;">
            <button type="reset" id="Mybtn" value="Save" class="btn btn-block btn-primary">Save</button>
        <*@/div>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>




<style>
    .field-validation-error {
        color: red;
    }

    textarea {
        max-width: 280px;
    }

    .input-validation-error {
        border: 2px solid red;
    }
</style>

@section scripts{
    @Scripts.Render("~/bundles/lib")
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/test.js"></script>*@

    <script>
        $(document).ready(function () {
            console.log("Ready");
            $("#Movie_Name").autocomplete({
                source: '@Url.Action("GetAllMoviesName")',
                autoFocus: true,
                minLength: 2
            });


















            //$("#tt").focusout(function () {
            //      $("#ii").text($("#tt").val());
            //    $.ajax({
            //        url: "/Movies/GetAllMoviesName/",
            //        method: "post",
            //        data: { "searchText": $("#tt").val() },
            //        dataType: "json",
            //        success: function (data) {
            //            $("#ii").text(data);
            //        },
            //        error: function (xhr, msg) {
            //            console.log(msg + '\n' + xhr.responseText);
            //        }
            //});

            //});

            //$("#Mybtna").click(function () {
            //    $.ajax({
            //        type: "post",
            //        url: "/Movies/Create_Post",
            //        data: $("#myform").serialize(),
            //        beforeSend: function () {
            //            alert();
            //            $('#Mybtn').html('Loading...');
            //        },
            //        complete: function () {
            //            $('#Mybtn').text('Save');
            //        },
            //        success: function (msg) {
            //            console.log(msg);
            //            $("#mymodal").modal('hide');
            //            alert("You are done");
            //        },
            //    });
            //});


        });
    </script>

}